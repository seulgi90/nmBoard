<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nmBoard.test.dao.BoardDao">

<!-- id : 연결 정보를 가리키는 식별자. SQL문을 설정할 때 사용 -->
	<resultMap type="board" id="boardMap">
		<id column="BOARDNO" property="no" />
		<result column="TITLE" property="title" />
		<result column="CONTENT" property="content" />
		<result column="USERNO" property="userNo" />

<!-- 조인 결과에서 같은 게시글에 대해 한 개의 회원 데이터를 담을 경우 -->	
<!-- association : 1:1 관계의 테이블을 조인할 때 사용 (조인 객체): 1개의 게시글에 1명의 user만 존재	 -->
		<association property="writer" javaType="User">
			<id column="USERNO" property="userNo" />
			<result column="ID" property="id" />
			<result column="PASSWORD" property="password" />
			<result column="NAME" property="name" />
		</association>
		
<!-- 조인 결과에서 같은 게시글에 대해 여러 개의 첨부 파일 데이터를 담을 경우 -->
<!-- collection : 1:M 관계의 테이블을 조인할 때 사용 (조인 객체): 1개의 게시글의 여러개의 첨부파일 존재 -->
		<collection property="attachedFiles" ofType="attachedFile">
			<id column="ATTACHEDFILENO" property="attachedFileNo" />
			<result column="FILEPATH" property="filepath" />
		</collection>
	</resultMap>
	
	<resultMap type="attachedFile" id="attachedFileMap">
		<id column="ATTACHEDFILENO" property="attachedFileNo" />
		<result column="filepath" property="filepath" />
		<result column="BOARDNO" property="boardNo" />
	</resultMap>


	<insert id="writeBoard" parameterType="board"
		useGeneratedKeys="true" keyColumn="BOARDNO" keyProperty="no">
		insert into BOARD
			(TITLE, CONTENT, USERNO)
		values
			(#{title}, #{content}, #{userNo})
	</insert>

<!-- 	페이징 + 검색 리스트 -->
	<select id="getPageList" parameterType="criteria" resultMap="boardMap">
		select 
			BOARD.BOARDNO,
			BOARD.TITLE,
			BOARD.CONTENT,
			USER.USERNO,
			USER.NAME,
			USER.ID,
			USER.ROLENAME
		from
			BOARD
		join USER on BOARD.USERNO = USER.USERNO
		<if test="keyword != null and keyword != ''">
		where
			BOARD.BOARDNO LIKE CONCAT ('%', #{keyword}, '%')
			or BOARD.TITLE LIKE CONCAT ('%', #{keyword}, '%')
			or BOARD.CONTENT LIKE CONCAT ('%', #{keyword}, '%')
			or USER.NAME LIKE CONCAT ('%', #{keyword}, '%')
		</if>
		order by 
			BOARD.BOARDNO
		LIMIT #{offset}, #{recordSize} 
<!--  	limit #{시작 위치(몇 번째 데이터부터 가지고 올 것인지)를 지정}, #{시작 위치를 기준으로 가지고 올 데이터의 개수} -->
	</select>
	
<!-- 	페이징을 위한 게시물 총 개수  -->
	<select id="getCountBoard" resultType="int">
		select
			COUNT(BOARDNO)
		from
			BOARD
		<if test="keyword != null and keyword != ''">
		where
			BOARD.BOARDNO LIKE CONCAT ('%', #{keyword}, '%')
			or BOARD.TITLE LIKE CONCAT ('%', #{keyword}, '%')
			or BOARD.CONTENT LIKE CONCAT ('%', #{keyword}, '%')
			or USER.NAME LIKE CONCAT ('%', #{keyword}, '%')
		</if>
	</select>
	
	<select id="findByNo" resultMap="boardMap">
		select
			BOARD.BOARDNO,
			BOARD.TITLE,
			BOARD.CONTENT,
			BOARD.USERNO,
			USER.NAME,
			USER.ID,
			ATTACHEDFILE.ATTACHEDFILENO,
			ATTACHEDFILE.FILEPATH
		from
			BOARD
		join USER on BOARD.USERNO = USER.USERNO
		left outer join ATTACHEDFILE on ATTACHEDFILE.BOARDNO = BOARD.BOARDNO
		where
			BOARD.BOARDNO=#{no}
	</select>

	<update id="updateBoard">
		update
			BOARD
		set
			TITLE =#{title},
			CONTENT =#{content}
		where
			BOARDNO =#{no}
	</update>

	<delete id="deleteBoard">
		delete from
			BOARD
		where
			BOARDNO=#{no}
	</delete>

	<insert id="insertFiles" parameterType="board">
		insert into ATTACHEDFILE
			(FILEPATH, BOARDNO)
		values
		<foreach collection="attachedFiles" item="file" separator=",">
			(#{file.filepath}, #{no})
		</foreach>
	</insert>


	<select id="findByAttachedFileNo" resultMap="attachedFileMap">
		select
			ATTACHEDFILENO,
			FILEPATH,
			BOARDNO
		from
			ATTACHEDFILE
		where
			ATTACHEDFILENO =#{attachedFileNo}
	</select>

	<delete id="deleteAttachedFile">
		delete from
			ATTACHEDFILE
		where
			ATTACHEDFILENO=#{attachedFileNo}
	</delete>

	<delete id="deleteFiles">
		delete from
			ATTACHEDFILE
		where
			BOARDNO=#{no}
	</delete>
	
</mapper>
